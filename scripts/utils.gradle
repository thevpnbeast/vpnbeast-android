def VERSION_PROPERTY_FILE = "${project.rootDir}/version.properties"

ext.getVersionName = {
    def versionMajor = readProperty(VERSION_PROPERTY_FILE, 'VERSION_MAJOR')
    def versionMinor = readProperty(VERSION_PROPERTY_FILE, 'VERSION_MINOR')
    def versionPatch = readProperty(VERSION_PROPERTY_FILE, 'VERSION_PATCH')

    return versionMajor + "." + versionMinor + "." + versionPatch
}

ext.getVersionCode = {
    return readProperty(VERSION_PROPERTY_FILE, 'VERSION_CODE').toInteger()
}

ext.incrementVersionCode = {
    def versionCode = readProperty(VERSION_PROPERTY_FILE, 'VERSION_CODE')
    def newVersionCode = versionCode.toInteger() + 1
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_CODE', newVersionCode.toString())
}

ext.incrementVersion = {
    def versionPatch = readProperty(VERSION_PROPERTY_FILE, 'VERSION_PATCH')
    def newVersionPatch = versionPatch.toInteger() + 1
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_PATCH', newVersionPatch.toString())
}

ext.incrementVersionMinor = {
    def versionMinor = readProperty(VERSION_PROPERTY_FILE, 'VERSION_MINOR')
    def newVersion = versionMinor.toInteger() + 1
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_PATCH', "0")
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_MINOR', newVersion.toString())
}

ext.incrementVersionMajor = {
    def versionMajor = readProperty(VERSION_PROPERTY_FILE, 'VERSION_MAJOR')
    def newVersion = versionMajor.toInteger() + 1
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_PATCH', "0")
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_MINOR', "0")
    writeProperty(VERSION_PROPERTY_FILE, 'VERSION_MAJOR', newVersion.toString())
}

def readProperty(propertiesFilePath, propertyName) {
    def propertiesFile = file(propertiesFilePath)
    def properties = loadProperties(propertiesFile)
    return properties[propertyName]
}

def writeProperty(propertiesFilePath, propertyName, propertyValue) {
    def propertiesFile = file(propertiesFilePath)
    def properties = loadProperties(propertiesFile)
    properties[propertyName] = propertyValue
    properties.store(propertiesFile.newWriter(), null)
}

static def loadProperties(propertiesFile) {
    if (propertiesFile.canRead()) {
        def properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))
        return properties
    } else {
        throw new GradleException('Could not read ' + propertiesFile)
    }
}

ext.log = { task, msg ->
    println(':' + task + ' - ' + msg)
}